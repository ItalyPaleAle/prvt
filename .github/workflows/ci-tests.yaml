name: CI Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  GO_VERSION: 1.15

jobs:

  build:
    name: Go build and test
    runs-on: ubuntu-20.04

    env:
      AWS_ACCESS_KEY_ID: "AKIAIOSFODNN7EXAMPLE"
      AWS_SECRET_ACCESS_KEY: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"

    steps:

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^${{env.GO_VERSION}}

      - name: Go version
        run: |
          go version

      - name: Check out code
        uses: actions/checkout@v2

      # Can't use a GitHub Action service because that doesn't allow overriding the container's entrypoint
      - name: Start minio
        run: |
          docker run \
            -d \
            -p 9000:9000 \
            -e "MINIO_ACCESS_KEY=${{env.AWS_ACCESS_KEY_ID}}" \
            -e "MINIO_SECRET_KEY=${{env.AWS_SECRET_ACCESS_KEY}}" \
            minio/minio \
              server /data

      - name: Fetch tools
        run: |
          # Install goveralls
          curl -sf https://gobinaries.com/github.com/mattn/goveralls@v0.0.6 | PREFIX=. sh

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: |
          go build -v .

      - name: Test
        run: |
          go test -race -covermode atomic -coverprofile=covprofile ./...
        env:
          S3_ENDPOINT: "localhost:9000"
          S3_TLS: "false"

      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./goveralls -coverprofile=covprofile -service=github
